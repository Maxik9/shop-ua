import { useEffect, useRef, useState } from "react";

/**
 * –ü—Ä–æ—Å—Ç–∏–π WYSIWYG —ñ–∑ –ø–µ—Ä–µ–º–∏–∫–∞—á–µ–º "–î–∂–µ—Ä–µ–ª–æ"
 * –§—ñ–∫—Å–∏: –æ–±–º–µ–∂–µ–Ω–Ω—è —à–∏—Ä–∏–Ω–∏ –∫–æ–Ω—Ç–µ–Ω—Ç—É, –ø–µ—Ä–µ–Ω–æ—Å –¥–æ–≤–≥–∏—Ö —Å–ª—ñ–≤,
 * responsive –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è/—Ç–∞–±–ª–∏—Ü—ñ, –º º—è–∫–µ –ø—Ä–æ–∫—Ä—É—á—É–≤–∞–Ω–Ω—è.
 */
export default function RichEditor({
  value = "",
  onChange = () => {},
  placeholder = "–û–ø–∏—Å —Ç–æ–≤–∞—Ä—É‚Ä¶",
  minHeight = 220,
}) {
  const [html, setHtml] = useState(value || "");
  const [showSource, setShowSource] = useState(false);
  const editorRef = useRef(null);

  useEffect(() => {
    setHtml(value || "");
  }, [value]);

  const setAndEmit = (next) => {
    setHtml(next);
    onChange(next);
  };

  const exec = (cmd, val = null) => {
    editorRef.current?.focus();
    document.execCommand(cmd, false, val);
    setAndEmit(editorRef.current?.innerHTML || "");
  };

  const insertLink = () => {
    const url = prompt("–í—Å—Ç–∞–≤—Ç–µ –ø–æ—Å–∏–ª–∞–Ω–Ω—è (https://‚Ä¶):", "");
    if (!url) return;
    exec("createLink", url);
  };

  const insertImage = () => {
    const url = prompt("URL –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è:", "");
    if (!url) return;
    exec("insertImage", url);
  };

  const clearAll = () => {
    if (!editorRef.current) return;
    editorRef.current.innerHTML = "";
    setAndEmit("");
  };

  const onInput = () => setAndEmit(editorRef.current?.innerHTML || "");

  // –ù–µ–≤–µ–ª–∏—á–∫–∏–π "—Å–∞–Ω—ñ—Ç–∞–π–∑–µ—Ä" —à–∏—Ä–∏–Ω–∏ –¥–ª—è –≤—Å—Ç–∞–≤–æ–∫ —ñ–∑ –±—É—Ñ–µ—Ä–∞
  const onPaste = (e) => {
    // –¥–∞—î–º–æ –±—Ä–∞—É–∑–µ—Ä—É –≤—Å—Ç–∞–≤–∏—Ç–∏ —è–∫ HTML‚Ä¶
    setTimeout(() => {
      const el = editorRef.current;
      if (!el) return;
      // –ü—Ä–∏–±–µ—Ä–µ–º–æ –Ω–µ–±–µ–∑–ø–µ—á–Ω—ñ max-width/width > 100% —É style
      el.querySelectorAll("[style]").forEach((n) => {
        const s = n.getAttribute("style") || "";
        // –∑–∞–±–∏—Ä–∞—î–º–æ —à–∏—Ä–∏–Ω–∏, —â–æ –ª–∞–º–∞—é—Ç—å –≤–µ—Ä—Å—Ç–∫—É
        const cleaned = s
          .replace(/(?:^|;)\s*width\s*:\s*[^;]+/gi, "")
          .replace(/(?:^|;)\s*max-width\s*:\s*[^;]+/gi, "");
        n.setAttribute("style", cleaned);
      });
      setAndEmit(el.innerHTML);
    }, 0);
  };

  return (
    <div className="rich-editor">
      {/* –õ–æ–∫–∞–ª—å–Ω—ñ —Å—Ç–∏–ª—ñ, —â–æ–± –Ω—ñ—á–æ–≥–æ –Ω–µ —ó—Ö–∞–ª–æ –∑–∞ –º–µ–∂—ñ */}
      <style>{`
        .rich-editor .toolbar .btn-ghost {
          padding: 6px 10px; border-radius: 8px; border: 1px solid rgba(0,0,0,.06);
        }
        .rich-editor .editor-surface {
          width: 100%;
          box-sizing: border-box;
          padding: 12px 14px;
          border: 1px solid rgba(0,0,0,.1);
          border-radius: 12px;
          background: #fff;
          min-height: ${minHeight}px;
          overflow: auto;               /* <‚Äî –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –≤—Å–µ—Ä–µ–¥–∏–Ω—ñ */
          max-width: 100%;              /* <‚Äî –Ω—ñ–∫–æ–ª–∏ –Ω–µ —à–∏—Ä—à–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ */
          word-break: break-word;       /* <‚Äî –ø–µ—Ä–µ–Ω–æ—Å –¥–æ–≤–≥–∏—Ö —Å–ª—ñ–≤ */
          overflow-wrap: anywhere;
        }
        .rich-editor .editor-surface:empty:before {
          content: attr(data-placeholder);
          color: #94a3b8; /* slate-400 */
        }
        .rich-editor .editor-surface * {
          max-width: 100%;              /* <‚Äî –µ–ª–µ–º–µ–Ω—Ç–∞–º –Ω–µ –¥–∞—î–º–æ –≤–∏–ª–∞–∑–∏—Ç–∏ */
        }
        .rich-editor .editor-surface img {
          max-width: 100%; height: auto; display: inline-block;
        }
        .rich-editor .editor-surface table {
          width: 100%; table-layout: auto; border-collapse: collapse;
        }
        .rich-editor .editor-surface td, 
        .rich-editor .editor-surface th {
          border: 1px solid rgba(0,0,0,.08); padding: 6px;
        }
        /* –ø—Ä–∏–±–∏—Ä–∞—î–º–æ –≤–µ–ª–∏–∫—ñ –≤—ñ–¥—Å—Ç—É–ø–∏, —â–æ –º–æ–∂—É—Ç—å —à—Ç–æ–≤—Ö–∞—Ç–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */
        .rich-editor .editor-surface > :first-child { margin-top: 0 !important; }
        .rich-editor .editor-surface > :last-child  { margin-bottom: 0 !important; }
        /* textarea –¥–ª—è "–î–∂–µ—Ä–µ–ª–æ" —Ç–æ–π —Å–∞–º–∏–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä */
        .rich-editor .source-area {
          width: 100%; min-height: ${minHeight}px;
          box-sizing: border-box;
          padding: 12px 14px;
          border: 1px solid rgba(0,0,0,.1);
          border-radius: 12px;
          font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
          line-height: 1.5;
          white-space: pre-wrap;
        }
      `}</style>

      {/* toolbar */}
      <div className="toolbar flex flex-wrap gap-1 mb-2">
        <button type="button" className="btn-ghost" title="–ñ–∏—Ä–Ω–∏–π" onClick={() => exec("bold")}>B</button>
        <button type="button" className="btn-ghost" title="–ö—É—Ä—Å–∏–≤" onClick={() => exec("italic")}><i>–Ü</i></button>
        <button type="button" className="btn-ghost" title="–ü—ñ–¥–∫—Ä–µ—Å–ª–µ–Ω–Ω—è" onClick={() => exec("underline")}><u>U</u></button>
        <button type="button" className="btn-ghost" title="–ó–∞–∫—Ä–µ—Å–ª–µ–Ω–Ω—è" onClick={() => exec("strikeThrough")}><s>S</s></button>

        <div className="mx-2 h-6 w-px bg-slate-300" />

        <button type="button" className="btn-ghost" title="–ú–∞—Ä–∫–µ—Ä–æ–≤–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫" onClick={() => exec("insertUnorderedList")}>‚Ä¢ –°–ø–∏—Å–æ–∫</button>
        <button type="button" className="btn-ghost" title="–ù—É–º–µ—Ä–æ–≤–∞–Ω–∏–π —Å–ø–∏—Å–æ–∫" onClick={() => exec("insertOrderedList")}>1. –°–ø–∏—Å–æ–∫</button>

        <div className="mx-2 h-6 w-px bg-slate-300" />

        <button type="button" className="btn-ghost" title="H2" onClick={() => exec("formatBlock", "H2")}>H2</button>
        <button type="button" className="btn-ghost" title="H3" onClick={() => exec("formatBlock", "H3")}>H3</button>
        <button type="button" className="btn-ghost" title="–ó–≤–∏—á–∞–π–Ω–∏–π" onClick={() => exec("formatBlock", "P")}>P</button>

        <div className="mx-2 h-6 w-px bg-slate-300" />

        <button type="button" className="btn-ghost" title="–ü–æ—Å–∏–ª–∞–Ω–Ω—è" onClick={insertLink}>üîó</button>
        <button type="button" className="btn-ghost" title="–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è (URL)" onClick={insertImage}>üñºÔ∏è</button>

        <div className="mx-2 h-6 w-px bg-slate-300" />

        <button type="button" className="btn-ghost" title="–õ—ñ–≤–æ—Ä—É—á" onClick={() => exec("justifyLeft")}>‚ü∏</button>
        <button type="button" className="btn-ghost" title="–ü–æ —Ü–µ–Ω—Ç—Ä—É" onClick={() => exec("justifyCenter")}>‚â°</button>
        <button type="button" className="btn-ghost" title="–ü—Ä–∞–≤–æ—Ä—É—á" onClick={() => exec("justifyRight")}>‚üπ</button>

        <div className="mx-2 h-6 w-px bg-slate-300" />

        <button type="button" className="btn-ghost" title="Undo" onClick={() => exec("undo")}>‚Ü∂</button>
        <button type="button" className="btn-ghost" title="Redo" onClick={() => exec("redo")}>‚Ü∑</button>
        <button type="button" className="btn-ghost" title="–û—á–∏—Å—Ç–∏—Ç–∏ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è" onClick={() => exec("removeFormat")}>üßπ</button>
        <button type="button" className="btn-ghost" title="–û—á–∏—Å—Ç–∏—Ç–∏ –≤—Å–µ" onClick={clearAll}>‚úñ</button>

        <div className="mx-2 h-6 w-px bg-slate-300" />

        <button
          type="button"
          className={`btn-ghost ${showSource ? "bg-slate-200" : ""}`}
          title="–ü–æ–∫–∞–∑–∞—Ç–∏/—Å—Ö–æ–≤–∞—Ç–∏ HTML"
          onClick={() => setShowSource((v) => !v)}
        >
          –î–∂–µ—Ä–µ–ª–æ
        </button>
      </div>

      {/* Surface / Source */}
      {showSource ? (
        <textarea
          className="source-area"
          value={html}
          onChange={(e) => setAndEmit(e.target.value)}
          placeholder="<p>HTML –æ–ø–∏—Å‚Ä¶</p>"
        />
      ) : (
        <div
          ref={editorRef}
          className="editor-surface"
          contentEditable
          suppressContentEditableWarning
          onInput={onInput}
          onPaste={onPaste}
          data-placeholder={placeholder}
          // –ø–æ–∫–∞–∑—É—î–º–æ —Ä–æ–∑–º—ñ—Ç–∫—É –ø—Ä—è–º–æ —É –ø–æ–ª—ñ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è
          dangerouslySetInnerHTML={{ __html: html || "" }}
        />
      )}
    </div>
  );
}
